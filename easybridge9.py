from numpy import *
import broyden2
from time import sleep
import newton_multid as new

def bridge(x):

    #h = 0.
    hhh = 0.
    s2 = (2.)**(1./2)
    t1 = 0.806047
    L = array([ 1.12 , .301, (1-h)*s2+h*.621, (1-h)*s2 + h*.261, .528, .816])
    M = array([.2226, 0.073, .0581, .0822, .128])
    #P[6] = [3.053 , .184]
    #L = array([1.12, .301,.621,.261,.528,.816])
    P = zeros((7,2))
    P[0] = [0,0]
    P[len(P)-1] = [3.053, .184]
    T = x[len(P)+3:]
    gv = array([0,-1])
    f = zeros(len(x))
    g = 9.81
    #print T
    
    for k in range(len(P)-2): 
        P[k+1] = [x[2*k] ,x[2*k+1]]
    #print P
    for i in range(len(P)-1): 
        Pd = P[i+1] - P[i]
        f[i] = linalg.norm(Pd) - L[i] 

    for j in range(1,len(P)-1): 
         f[i+1+2*(j-1)] = T[j-1]*(P[j-1,0]-P[j,0])/L[j-1] + T[j]*(P[j+1,0]-P[j,0])/L[j]
         f[i+2+2*(j-1)] = T[j-1]*(P[j-1,1]-P[j,1])/L[j-1] + T[j]*(P[j+1,1]-P[j,1])/L[j] - M[j-1]*9.81
         #print i+2+2*(j-1)
         #print f
    return f




#x = array([ 0.49371527,-1.32523403,1.57620047,-2.23530315,2.95255255,-2.56034921,
#  4.32614317,-2.2238246,5.3639315,-1.26309812,3.39307124, 1.54756028,
#  1.21713849,  1.21958542,  1.61421268,  2.63369606]) # with mass
#print bridge(x0)
'''
x = array([ 0.50255028, -1.32190893 , 1.6111082 , -2.20003154,  3.00064844, -2.46304852,
  4.35871246, -2.06850813,  5.37415851, -1.08419652,  3.3428752,   1.51544888,
  1.20900627,  1.23702774,  1.65440879,  2.68432643]) #with y node
  
x = array([ 0.40641303, -1.04366108 , 1.5007415 , -1.93945414 , 2.87437089 ,-2.27582045,
  4.2579123 , -1.98288162,  5.33134794, -1.06215586 , 3.43996945 , 1.6131379,
  1.28513755 , 1.27593052,  1.64453523 , 2.64009163]) # with L0

x = array([ 0.61334794, -0.93712555 , 0.87796872 ,-1.08057186 , 2.25950076 ,-1.38284529,
  3.67266711, -1.32843132,  4.98458163 ,-0.80034015,  4.0449679,   2.51968658,
  2.26755593,  2.21679576,  2.38788511,  3.08513343]) #With L1
'''
#x = array([ 0.86246551, -0.71453009,  1.15514561, -0.78481066,  2.56778755, -0.8514646,
#  3.97406655, -0.70186722,  5.31956946, -0.26641124,  4.81989418,  3.81710862,
#  3.71572975,  3.73254218,  3.90114034,  4.45110235]) #with L5

#x = 

x = array([ 0.16478983, -1.10781059,  0.29898166, -1.3772425,   1.58297905, -1.96999094,
  2.70407743, -1.10793616,  2.89949995, -0.6174323,   3.14791254,  1.0389041,
  0.51013591,  0.58426022,  1.25139477,  2.46216238]) # with x2 and L4

#print bridge(x)



for i in linspace(0,1,1e4):
    
    h = i
    b0 = broyden2.fdjac(bridge,x)
    xnew = new.newton(bridge,b0,x,1e-8)
    x = xnew
    print x

    if math.isnan(linalg.norm(xnew,inf)) == True:
        print i
        print x
        print 'nan break'
        break
print xnew


#b0 = broyden2.fdjac(bridge,x)
#print new.newton(bridge,b0,x,1e-12)
